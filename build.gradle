apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {

    buildFeatures{
        dataBinding = true
    }
    compileSdkVersion rootProject.ext.compile_version
    defaultConfig {
        minSdkVersion rootProject.ext.minSdk_version
        targetSdkVersion rootProject.ext.target_version
        versionCode 1
        versionName "1.0"
    }
    lintOptions {
        abortOnError false
    }

    buildTypes {
        debug {
            minifyEnabled false
            debuggable true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField("String", "API_HOST", "\"http://www.baidu.com/debug/\"")
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField("String", "API_HOST", "\"http://www.baidu.com/release/\"")
        }
    }

    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }
}
configurations.all {
    resolutionStrategy.eachDependency { details ->
        if (details.requested.group == 'com.android.support'
                && !details.requested.name.contains('multidex')) {
            details.useVersion "${rootProject.ext.support_version}"
        }
    }
}
dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    //support

    api 'androidx.multidex:multidex:2.0.0'
    api "androidx.appcompat:appcompat:${rootProject.ext.androidx_appcompat}"
    api "androidx.constraintlayout:constraintlayout:${rootProject.ext.androidx_constraintlayout}"

    api "androidx.room:room-runtime:${rootProject.ext.androidx_room}"
    api "androidx.room:room-rxjava2:${rootProject.ext.androidx_room}"
    api "androidx.recyclerview:recyclerview:${rootProject.ext.androidx_recyclerview}"
    api "androidx.legacy:legacy-support-v4:${rootProject.ext.androidx_legacy}"
    api "androidx.lifecycle:lifecycle-extensions:${rootProject.ext.androidx_lifecycle}"
    api "androidx.lifecycle:lifecycle-runtime:${rootProject.ext.androidx_lifecycle}"
    api "androidx.paging:paging-runtime:${rootProject.ext.androidx_paging}" // For Kotlin use paging-runtime-ktx
    api "androidx.paging:paging-rxjava2:${rootProject.ext.androidx_paging}" // For Kotlin use paging-rxjava2-ktx

    kapt "androidx.lifecycle:lifecycle-compiler:${rootProject.ext.androidx_lifecycle}"

    api "com.google.android.material:material:${rootProject.ext.google_material}"

    //rxjava
    api "io.reactivex.rxjava2:rxjava:${rootProject.ext.rxjava2_version}"
    api "io.reactivex.rxjava2:rxandroid:${rootProject.ext.rxandroid}"
    //dagger
    api "com.google.dagger:dagger:${rootProject.ext.dagger_version}"
    kapt "com.google.dagger:dagger-compiler:${rootProject.ext.dagger_version}"
    //retrofit, json parse
    api "com.squareup.retrofit2:retrofit:${rootProject.ext.retrofit2_version}"
    api "com.squareup.retrofit2:adapter-rxjava2:${rootProject.ext.retrofit2_version}"
    api "com.squareup.retrofit2:converter-moshi:${rootProject.ext.retrofit2_version}"
    api "com.squareup.moshi:moshi-kotlin:${rootProject.ext.moshi_version}"
    api "com.squareup.moshi:moshi:${rootProject.ext.moshi_version}"
    api 'com.hjq:toast:5.2'
    //glid
    api "com.github.bumptech.glide:glide:${rootProject.ext.glide_version}"
    kapt "com.github.bumptech.glide:compiler:${rootProject.ext.glide_version}"
    //databinding
    //kotlin
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'
}

